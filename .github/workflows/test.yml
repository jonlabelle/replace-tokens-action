name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - synchronize
  workflow_dispatch:

jobs:
  test:
    name: Test ${{ matrix.style }} on ${{ matrix.os }} (${{ matrix.shell }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    strategy:
      fail-fast: false
      matrix:
        style: [mustache, envsubst, make]
        os: [ubuntu-latest, windows-latest, macos-latest]
        shell: [pwsh]
        include:
          # Add PowerShell 5.1 tests on Windows for each style
          - os: windows-latest
            style: mustache
            shell: powershell
          - os: windows-latest
            style: envsubst
            shell: powershell
          - os: windows-latest
            style: make
            shell: powershell
    steps:
      - name: Checkout repository for ${{ matrix.style }} test on ${{ matrix.os }}
        uses: actions/checkout@main

      - name: Setup ${{ matrix.style }} test on ${{ matrix.os }}
        id: test-setup
        run: |
          # Use explicit parameter names for PowerShell 5.1 compatibility
          $expected = Join-Path -Path (Join-Path -Path (Join-Path -Path (Join-Path -Path $pwd -ChildPath test) -ChildPath stubs) -ChildPath expected) -ChildPath replaced.tpl
          $subject = Join-Path -Path (Join-Path -Path $pwd -ChildPath test) -ChildPath subject-${{ matrix.style }}.tpl
          $pristine = Join-Path -Path (Join-Path -Path (Join-Path -Path (Join-Path -Path $pwd -ChildPath test) -ChildPath stubs) -ChildPath pristine) -ChildPath ${{ matrix.style }}.tpl

          $untouched = Join-Path -Path (Join-Path -Path (Join-Path -Path (Join-Path -Path $pwd -ChildPath test) -ChildPath stubs) -ChildPath untouched) -ChildPath no-matches.tpl
          $untouchedHash = (Get-FileHash -Path $untouched -Algorithm SHA256).Hash

          Copy-Item -Path $pristine -Destination $subject

          # Use Add-Content for PowerShell 5.1 compatibility (Out-File utf8NoBOM not available in PS 5.1)
          Add-Content -Path $env:GITHUB_OUTPUT -Value "expected-path=$expected" -Encoding UTF8
          Add-Content -Path $env:GITHUB_OUTPUT -Value "subject-path=$subject" -Encoding UTF8
          Add-Content -Path $env:GITHUB_OUTPUT -Value "untouched-path=$untouched" -Encoding UTF8
          Add-Content -Path $env:GITHUB_OUTPUT -Value "untouched-hash=$untouchedHash" -Encoding UTF8

      - name: Show ${{ matrix.style }} test subject before replacement on ${{ matrix.os }}
        run: cat "${{ steps.test-setup.outputs.subject-path }}"

      - name: Show expected output for ${{ matrix.style }} test on ${{ matrix.os }}
        run: cat "${{ steps.test-setup.outputs.expected-path }}"

      - name: Show untouched ${{ matrix.style }} test subject before replacement on ${{ matrix.os }}
        run: cat "${{ steps.test-setup.outputs.untouched-path }}"

      - name: Show expected hash for untouched ${{ matrix.style }} test on ${{ matrix.os }}
        run: echo "${{ steps.test-setup.outputs.untouched-hash }}"

      - name: Perform ${{ matrix.style }} test on ${{ matrix.os }}
        uses: ./
        with:
          paths: |
            ${{ steps.test-setup.outputs.subject-path }}
            ${{ steps.test-setup.outputs.untouched-path }}
          style: ${{ matrix.style }}
          fail: true
          no-newline: true
          verbose: true
        env:
          NAME: jon

      - name: Show actual result for ${{ matrix.style }} test on ${{ matrix.os }}
        run: cat "${{ steps.test-setup.outputs.subject-path }}"

      - name: Assert ${{ matrix.style }} replacement test on ${{ matrix.os }}
        id: assert-replacement
        run: |
          $expected = "${{ steps.test-setup.outputs.expected-path }}"
          $subject = "${{ steps.test-setup.outputs.subject-path }}"

          $expectedContent = Get-Content -Path $expected -Raw
          $actualContent = Get-Content -Path $subject -Raw

          if ($expectedContent -ne $actualContent) {
            Write-Host "::error title=FAIL Token replacement test failed::You probably want to fix this."
            exit 1
          } else {
            Write-Host "PASS: Token replacement test passed"
          }

      - name: Show actual result of untouched ${{ matrix.style }} test on ${{ matrix.os }}
        run: cat "${{ steps.test-setup.outputs.untouched-path }}"

      - name: Assert ${{ matrix.style }} untouched test on ${{ matrix.os }}
        id: assert-untouched
        run: |
          $expected = "${{ steps.test-setup.outputs.untouched-hash }}"
          $actual = (Get-FileHash -Path "${{ steps.test-setup.outputs.untouched-path }}" -Algorithm SHA256).Hash

          if ($expected -ne $actual) {
            Write-Host "::error title=FAIL Token untouched test failed::You probably want to fix this."
            exit 1
          } else {
            Write-Host "PASS: Token untouched test passed"
          }

      - name: Run Pester Tests
        run: Invoke-Pester -Path ./test/ReplaceTokens.Tests.ps1 -Output Detailed
