---
name: Replace tokens action
description: A GitHub action to replace tokens in a file. Similar to envsubst.
author: Jon LaBelle
branding:
  icon: percent
  color: purple
inputs:
  paths:
    description: |
      Replacement file path(s).
      Specifies a path to one or more locations.
      Specify multiple paths on separate lines using a multiline string `|`.
      Wildcards are accepted.
      The default location is the current directory (`.`).
      Example: `./path/to/my/settings.json`
    required: true
  token-style:
    description: |
      The style (or format) of the tokens that will be replaced.
      Accepted values are `envsubst` (ex: `${VARIABLE}`) and `handlebars` (ex: `{{VARIABLE}}`).
      The default token style is `envsubst`.
    required: false
    default: 'envsubst'
  filter:
    description: |
      Filter to qualify the `paths` parameter.
      Only supports `*` and `?` wildcards.
      Example: `*.json`
    required: false
  recurse:
    description: |
      Whether or not to recurse directories.
      The default is `false`, or no directory recursion.
    required: false
    default: 'false'
  depth:
    description: |
      Depth of directory recursion.
      Only valid if the `recurse` option is enabled.
      There default depth is not set.
    required: false
    default: '0'
  follow-symlinks:
    description: |
      Whether or not to follow symbolic links.
      The default behavior is not to follow symbolic links.
    required: false
    default: 'false'
  throw:
    description: Throw an error if no tokens were replaced.
    required: false
    default: 'false'

runs:
  using: composite
  steps:
    - name: replace tokens
      shell: pwsh
      run: |
        # Split multiline paths
        $paths = '${{ inputs.paths }}' -split '\r?\n|\r' | Where-Object {$_.Trim() -ne ''}

        $params = @{
          Path = $paths
          Filter = "${{ inputs.filter }}"
          Recurse = [bool]"${{ inputs.recurse }}"
          Depth = [int]"${{ inputs.depth }}"
          FollowSymlinks = [bool]"${{ inputs.follow-symlinks }}"
          TokenStyle = '${{ inputs.token-style }}'
        }

        $scriptPath = (Join-Path "${{ github.action_path }}" "scripts" "replace-tokens.ps1")
        $result = (& $scriptPath @params)

        $throw = [bool]"${{ inputs.throw }}"
        if (($throw -eq $true) -and ($result.Count -eq 0)) {
          Write-Error 'âœ˜ error: no tokens were replaced'
          exit 1
        }

        Write-Output -InputObject "Replaced tokens in file(s):"
        Write-Output -InputObject $result
